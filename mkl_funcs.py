mkl_lines=['float  cblas_sdot(const MKL_INT N, const float  *X, const MKL_INT incX, const float  *Y, const MKL_INT incY);', 'float  cblas_snrm2(const MKL_INT N, const float *X, const MKL_INT incX);', 'float  cblas_sasum(const MKL_INT N, const float *X, const MKL_INT incX);']
vml_lines=['_Mkl_Api(void,vsAbs,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAdd,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsSub,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsInv,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsSqrt,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsInvSqrt,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsCbrt,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsInvCbrt,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsSqr,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsExp,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsExpm1,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsLn,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsLog10,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsLog1p,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsCos,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsSin,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsTan,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsCosh,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsSinh,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsTanh,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAcos,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAsin,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAtan,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAcosh,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAsinh,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAtanh,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsErf,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsErfInv,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsHypot,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsErfc,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsAtan2,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsMul,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsDiv,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsPow,(const MKL_INT n,  const float  a[], const float  b[], float  r[]))', '_Mkl_Api(void,vsPow3o2,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsPow2o3,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsPowx,(const MKL_INT n,  const float  a[], const float   b, float  r[]))', '_Mkl_Api(void,vsCeil,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsFloor,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsNearbyInt,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsRint,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsRound,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsTrunc,(const MKL_INT n,  const float  a[], float  r[]))', '_Mkl_Api(void,vsPackI,(const MKL_INT n,  const float  a[], const MKL_INT   incra, float  y[]))', '_Mkl_Api(void,vsPackV,(const MKL_INT n,  const float  a[], const MKL_INT ia[], float  y[]))', '_Mkl_Api(void,vsPackM,(const MKL_INT n,  const float  a[], const MKL_INT ma[], float  y[]))']
ipp_lines=['IPPAPI(IppStatus, ippsMove_32f,  (const Ipp32f*  pSrc, Ipp32f*  pDst, int len))', 'IPPAPI(IppStatus, ippsSet_32f,  (Ipp32f  val, Ipp32f*  pDst, int len))', 'IPPAPI(IppStatus, ippsZero_32f,  (Ipp32f*  pDst, int len))', 'IPPAPI(IppStatus, ippsAddC_32f,       (const Ipp32f*  pSrc, Ipp32f  val, Ipp32f*  pDst,    int len))', 'IPPAPI(IppStatus, ippsMulC_32f,         (const Ipp32f*  pSrc, Ipp32f  val, Ipp32f*  pDst,    int len))', 'IPPAPI(IppStatus, ippsSubC_32f,       (const Ipp32f*  pSrc, Ipp32f  val, Ipp32f*  pDst,    int len))', 'IPPAPI(IppStatus, ippsDivC_32f,      (const Ipp32f*  pSrc, Ipp32f  val, Ipp32f*  pDst,    int len))', 'IPPAPI(IppStatus, ippsSum_32f,         (const Ipp32f*  pSrc, int len, Ipp32f*  pSum, IppHintAlgorithm hint))', 'IPPAPI(IppStatus, ippsMin_32f, (const Ipp32f* pSrc, int len, Ipp32f* pMin))', 'IPPAPI(IppStatus, ippsMax_32f, (const Ipp32f* pSrc, int len, Ipp32f* pMax))', 'IPPAPI(IppStatus, ippsMean_32f,     (const Ipp32f*  pSrc, int len, Ipp32f*  pMean, IppHintAlgorithm hint))', 'IPPAPI(IppStatus, ippsStdDev_32f,       (const Ipp32f* pSrc, int len, Ipp32f* pStdDev, IppHintAlgorithm hint))', 'IPPAPI(IppStatus, ippsNormDiff_Inf_32f,         (const Ipp32f*  pSrc1, const Ipp32f*  pSrc2, int len, Ipp32f* pNorm))', 'IPPAPI(IppStatus, ippsNormDiff_L1_32f,          (const Ipp32f*  pSrc1, const Ipp32f*  pSrc2, int len, Ipp32f* pNorm))', 'IPPAPI(IppStatus, ippsNormDiff_L2_32f,          (const Ipp32f*  pSrc1, const Ipp32f*  pSrc2, int len, Ipp32f* pNorm))']
